name: Deploy to AWS App Runner

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: us-east-1
  APP_RUNNER_SERVICE: permit-api-prod

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run tests
      run: |
        python -m pytest tests/ -v --tb=short -k "not test_global"
        
    - name: Lint code
      run: |
        pip install flake8
        flake8 api/ --count --select=E9,F63,F7,F82 --show-source --statistics
        
  deploy-staging:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        
    - name: Deploy to staging
      run: |
        echo "Would deploy to staging environment"
        # Add actual staging deployment commands here
        
  deploy-production:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        
    - name: Trigger App Runner deployment
      run: |
        echo "App Runner will automatically deploy from main branch"
        # App Runner handles deployment automatically when connected to GitHub
        
    - name: Wait for deployment
      run: |
        echo "Waiting for App Runner deployment to complete..."
        aws apprunner describe-service --service-arn ${{ secrets.APP_RUNNER_SERVICE_ARN }} --query 'Service.Status'
        
    - name: Test production deployment
      run: |
        echo "Testing production endpoints..."
        # Add production health checks here
        # curl -f https://your-production-url.awsapprunner.com/health
        
    - name: Notify deployment status
      if: always()
      run: |
        echo "Deployment completed with status: ${{ job.status }}"
        # Add Slack/email notifications here if needed
